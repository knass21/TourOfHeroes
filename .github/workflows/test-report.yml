# name: 'Test Report'
# on:
#   workflow_run:
#     workflows: ['CI']                     # runs after CI workflow
#     types:
#       - completed
# jobs:
#   report:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: dorny/test-reporter@v1.6.0
#       with:
#         artifact: dotnet-results            # artifact name
#         name: MS Tests                  # Name of the check run which will be created
#         path: '*.trx'                     # Path to test results (inside artifact .zip)
#         reporter: dotnet-trx              # Format of test results




#       #       - name: Test Reporter
#       # uses: dorny/test-reporter@v1.6.0
#       # if: success() || failure()    # run this step even if previous step failed
#       # with:
#       #   name: MS Tests            # Name of the check run which will be created
#       #   path: TestResults/*.trx    # Path to test results
#       #   reporter: dotnet-trx        # Format of test results


name: .NET Core Build with Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      config: 'Release'
      
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x   
      
      # restore dependencies  
    - name: Install dependencies
      run: dotnet restore
      
      # build project
    - name: Build
      run: dotnet build --configuration $config --no-restore
      
    - name: set pr build number (if pr)
      id: PRNUMBER
      if: ${{ github.event_name == 'pull_request' }}
      uses: kkak10/pr-number-action@v1.3
      
      # set report file and title 
    - name: Set Test Title
      run: | 
            if ${{ github.event_name == 'pull_request' }}
            then
              echo "title=Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})" >> $GITHUB_ENV
              echo "file_name=TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md" >> $GITHUB_ENV              
            else
              echo "title=Test Run ${{github.run_number}}" >> $GITHUB_ENV
              echo "file_name=TestReport.${{github.run_number}}.md" >> $GITHUB_ENV
            fi
      
      # run tests with built project
    - name: Test PR      
      run: dotnet test --no-restore --no-build --configuration $config --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};"
      
      # upload report as build artifact
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      if: ${{always()}}
      with:
        name: 'Test Run'
        path: ${{github.workspace}}/${{env.file_name}}
      
      # add report as PR comment (if PR)
    - name: comment PR
      uses: machine-learning-apps/pr-comment@master
      if: ${{ github.event_name == 'pull_request' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        path: ${{env.file_name}}